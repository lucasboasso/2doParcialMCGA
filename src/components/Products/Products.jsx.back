import React, { useEffect } from "react";
import { connect } from "react-redux";
import { bindActionCreators } from "redux";
import { getProducts as getProductsAction } from "../../redux/actions/productsActions";
import { showModal as showModalAction } from "../../redux/actions/modalActions";
import modalTypes from "../../constants/modalTypes";
import styles from "./Products.module.css";
import loading from "../../loading.gif";
import Button from 'react-bootstrap/Button';
import SharedModal from "../SharedComponents/Modal/Modal";
import { checkAuthentication } from "../../redux/actions/authActions";


const Products = ({
    products,
    isLoading,
    error,
    showModal,
    getProducts,
    isAuthenticated,
    checkAuthentication
}) => {
    useEffect(() => {
        getProducts();
    }, [getProducts]);

    useEffect(() => {
        checkAuthentication();
    }, [checkAuthentication]);

    if (isLoading) {
        return <div align="center"><img src={loading} alt="Loading" /></div>
    }

    if (error) {
        return <div>Error</div>
    }

    if(!isAuthenticated){
        return <div>Debe autenticarse</div>
    }

    const showAddModal = () => {
        showModal(modalTypes.ADD_PRODUCT);
    };

    const showDeleteModal = (productId) => {
        showModal(modalTypes.DELETE_PRODUCT, {
            id: productId
        });
    }

    const showPutModal = (product) => {
        showModal(modalTypes.UPDATE_PRODUCT, {
            product
        });
    }

    return (
        <div className={styles.container}>
            <SharedModal />
            <Button variant="success" onClick={() => showAddModal()} >Agregar Producto</Button>
            <table className={styles.styledTable}>
                <thead>
                    <tr>
                        <th>Codigo</th>
                        <th>Nombre</th>
                        <th>Marca</th>
                        <th>Precio</th>
                        <th>Descripcion</th>
                        <th>Stock</th>
                        <th colSpan="2" text-align="center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    {products.map(product => {
                        return (
                            <tr key={product._id}>
                                <td>{product.codigo}</td>
                                <td>{product.nombre}</td>
                                <td>{product.marca}</td>
                                <td>{product.precio}</td>
                                <td>{product.descripcion}</td>
                                <td>{product.stock}</td>
                                <td>
                                    <Button variant="primary" onClick={() => showPutModal(product)}>Editar</Button>
                                </td>
                                <td>
                                    <Button variant="danger" onClick={() => showDeleteModal(product._id)}>Borrar</Button>
                                </td>
                            </tr>
                        );
                    })}
                </tbody>
            </table>
        </div>
    )
};

const mapDispatchToProps = (dispatch) => {
    return bindActionCreators({
        showModal: showModalAction,
        getProducts: getProductsAction,
    }, dispatch);
};

const mapStateToProps = (state) => {
    return {
        showModalValue: state.modal.show,
        isLoading: state.products.isLoading,
        error: state.products.error,
        products: state.products.list,
        isAuthenticated: state.auth.isAuthenticated
    };
}

export default connect(mapStateToProps, mapDispatchToProps)(Products);
